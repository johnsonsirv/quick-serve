service: order-serverlessly

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x

iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:PutItem
      - dynamodb:GetItem
    Resource:
      - arn:aws:dynamodb:#{AWS::Region}:#{AWS::AccountId}:table/orders
  - Effect: Allow
    Action:
      - kinesis:PutRecord
    Resource:
      - arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
  - Effect: Allow
    Action:
      - ses:SendEmail
    Resource:
      - "*"
    Condition:
      StringEquals:
        ses:FromAddress:
          - no-reply-order-serverlessly-system@grr.la
  - Effect: Allow
    Action:
      - sqs:SendMessage
    Resource:
      - arn:aws:sqs:#{AWS::Region}:#{AWS::AccountId}:third-party-queue

functions:
  createOrder:
    handler: handler.createOrder
    events:
     - httpApi:
         path: /order
         method: post
    environment:
      orderTableName: orders
      orderStreamName: order-events
  notifyThirdPartyProviders:
    handler: handler.notifyThirdPartyProviders
    events:
      - stream
          arn: arn:aws:kinesis:#{AWS::Region}:#{AWS::AccountId}:stream/order-events
    environment:
      region: ${self.provider.region}
      thirdPartyEmailAddress: thirdpartyprovider@grr.la
      noReplyEmailAddress: no-reply-order-serverlessly-system@grr.la
      thirdPartyQueue:
        Ref: thirdPartyQueue
  fulfilOrderByThirdParty:
    handler: handler.fulfilOrderByThirdParty
    events:
      - httpApi:
          path: /order/third-party/fulfill
          method: post
    environment:
      orderTableName: orders
      orderStreamName: order-events

resources:
  Resources:
    ordersEventStream:
      Type: AWS::Kinesis::Stream
      Properties:
        Name: order-events
        ShardCount: 1
    ordersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: orders
        AttributeDefinitions:
          - AttributeName: "orderId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "orderId"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST
    thirdPartyQueue:
      Type: AWS::SQS:Queue
      Properties:
        QueueName: third-party-queue

